#!/lib/bb/sh
# -*- mode: sh; -*-

# Script to test suitability of a busybox executable for use with bbinit.

BB=/bin/busybox
ReturnCode=0


ListNeededApplets () {
  local Scripts=
  local ScriptPaths='/etc/bb.d/ /usr/share/bbinit/'
  local ExcludeScripts='pxesrv'
  ScriptPaths=$(for P in $ScriptPaths ; do echo "$BBCK_SCRIPTS_ROOT$P"; done)
  ExcludeScripts=$(for S in $ExcludeScripts; do echo "\! -name $S"; done)
  for F in $($BB find $ScriptPaths -type f \! -name 'pxesrv' ) ; do
    case $($BB stat $F -c %A) in
      *x*) ;;
      *) continue ;;
    esac
    $BB cat $F > /dev/null || continue
    Scripts="$Scripts $F"
  done
  $BB awk '/\$BB / {
    gsub(/\$BB /,"\n\$BB ");
    print;
  }' $Scripts | $BB awk '/^\$BB / {
                  sub(/^\$BB +/,"");
                  if (/^[a-z]/) {
                    gsub(/[^a-z]+$/,"");
                    print $1;
                  }
                } END {
                        printf("%s\n","uevent");
                      }' | $BB sort -u
}

die () { echo "${0##*/}: ERROR: $@" 1>&2; exit 1; }

[ $# -gt 0 ] && TestBB=$1 || TestBB=/bin/busybox

case "$TestBB" in 
  --help|-h) 
    echo 'Tests busybox suitability for use with bbinit'
    echo "Usage: ${0##*/} [/path/to/busybox]"
    echo "Default test subject is /bin/busybox"
    exit 0
  ;;
esac

[ -e "$TestBB" ] || die "Cannot find $TestBB"
[ -f "$TestBB" ] || die "Cannot execute $TestBB (Wrong file type)"
[ -x "$TestBB" ] || die "Cannot execute $TestBB (Permission denied)"

echo "Testing $TestBB"

DepLister="$($BB dirname $($BB readlink -f $0))/solister"
if [ -f "$DepLister" ] && [ -x "$DepLister" ] ; then
  Dependencies=$($DepLister -q $TestBB)
  Dynamic=0
  for D in $Dependencies ; do
    if [ "$D" != "$TestBB" ] ; then
      Dynamic=1
      break
    fi
  done

  if [ $Dynamic -eq 0 ] ; then
    echo "$TestBB appears to be statically linked, this is good."
  else
    echo
    echo "WARNING: $TestBB appears to be dynamically linked."
    HaveInterp=0
    for D in $Dependencies ; do
      case "$D" in
        */ld-*)
          if [ -e "$D" ] ; then
            HaveInterp=1
          else
            echo
            echo "CRITICAL: Cannot find critical file: $D"
            echo "CRITICAL: This file is required to run $TestBB"
            echo "CRITICAL: Possibly incompatible architecture or libc version?"
            echo
          fi
          break
        ;;
      esac
    done
    if [ $HaveInterp -eq 1 ] ; then
      echo "If you use this busybox for your initramfs, you must also include:"
      for D in $Dependencies ; do
        [ $D = $TestBB ] || echo "  $D"
      done
      echo
    fi
    ReturnCode=2
  fi
else
  echo "WARNING: $DepLister not found, skipping dependency checks."
fi

HaveApplets=$($TestBB --list) || die "Failed to list applets in $TestBB"

MissingApplets=''

for Need in $(ListNeededApplets) ; do
  GotIt=0
  for Have in $HaveApplets ; do
    [ "$Have" = "$Need" ] && GotIt=1 && break
  done
  [ $GotIt -eq 1 ] || MissingApplets="$MissingApplets $Need"
done

if [ "x$MissingApplets" = 'x' ]; then
  echo "All necessary applets are included in $TestBB"
  exit $ReturnCode
else
  echo 
  echo "WARNING: Missing applets: $MissingApplets"
  echo
  echo "FAILED: $TestBB is not suitable for use with bbinit."
  echo
  exit 1
fi

