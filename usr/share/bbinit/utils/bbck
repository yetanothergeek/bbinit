#!/lib/bb/sh
# -*- mode: sh; -*-

# Script to test suitability of a busybox executable for use with bbinit.

ReturnCode=0

NeededApplets='
awk basename blkid busybox bzip2 cat chgrp chmod chown chvt cp cpio
cut date dc dd depmod diff dirname dmesg echo env false find findfs
free fsck fuser getty grep gzip halt hd head hexdump hostname id 
ifconfig ifdown ifup init install ip kill killall klogd last less
ln logger login md5sum mdev mkdir mknod mktemp modinfo modprobe mount
mountpoint mv nameif netstat passwd pgrep pidof ping poweroff printf
pwd rdev readlink realpath reboot rm run-parts sed sh sleep sort stat
strings swapoff swapon switch_root sync sysctl syslogd test touch tr
udhcpc uevent umount uname uptime wc which xz yes zstd'

SkipApplet () {
  local Skip
  for Skip in $BBCK_SKIP_APPLETS; do
    [ "$Skip" = "$1" ] && echo "NOTE: Skipping test for '$1' applet." && return
  done
  return 1
}

if [ "x$BBCK_SKIP_APPLETS" != 'x' ] ; then
  TempList=''
  for Need in $NeededApplets; do
    if ! SkipApplet "$Need" ; then
      TempList="$TempList $Need"
    fi
  done
  NeededApplets=$TempList
  TempList=''
fi

die () { echo "${0##*/}: ERROR: $@" 1>&2; exit 1; }

[ $# -gt 0 ] && TestBB=$1 || TestBB=/lib/bb/busybox

case "$TestBB" in 
  --help|-h) 
    echo 'Tests busybox suitability for use with bbinit'
    echo "Usage: ${0##*/} [/path/to/busybox]"
    echo "Default test subject is /lib/bb/busybox"
    echo
    echo "To skip some applet tests, set environment:"
    echo "  BBCK_SKIP_APPLETS='app1 app2 ...'"
    exit 0
  ;;
esac

[ -e "$TestBB" ] || die "Cannot find $TestBB"
[ -f "$TestBB" ] || die "Cannot execute $TestBB (Wrong file type)"
[ -x "$TestBB" ] || die "Cannot execute $TestBB (Permission denied)"

echo "Testing $TestBB"

DepLister="$(dirname $(readlink -f $0))/solister"
if [ -f "$DepLister" ] && [ -x "$DepLister" ] ; then
  Dependencies=$($DepLister -q $TestBB)
  Dynamic=0
  for D in $Dependencies ; do
    if [ "$D" != "$TestBB" ] ; then
      Dynamic=1
      break
    fi
  done

  if [ $Dynamic -eq 0 ] ; then
    echo "$TestBB appears to be statically linked, this is good."
  else
    echo
    echo "WARNING: $TestBB appears to be dynamically linked."
    HaveInterp=0
    for D in $Dependencies ; do
      case "$D" in
        */ld-*)
          if [ -e "$D" ] ; then
            HaveInterp=1
          else
            echo
            echo "CRITICAL: Cannot find critical file: $D"
            echo "CRITICAL: This file is required to run $TestBB"
            echo "CRITICAL: Possibly incompatible architecture or libc version?"
            echo
          fi
          break
        ;;
      esac
    done
    if [ $HaveInterp -eq 1 ] ; then
      echo "If you use this busybox for your initramfs, you must also include:"
      for D in $Dependencies ; do
        [ $D = $TestBB ] || echo "  $D"
      done
      echo
    fi
    ReturnCode=2
  fi
else
  echo "WARNING: $DepLister not found, skipping dependency checks."
fi

HaveApplets=$($TestBB --list) || die "Failed to list applets in $TestBB"

MissingApplets=''

for Need in $NeededApplets ; do
  GotIt=0
  for Have in $HaveApplets ; do
    [ "$Have" = "$Need" ] && GotIt=1 && break
  done
  [ $GotIt -eq 1 ] || MissingApplets="$MissingApplets $Need"
done

if [ "x$MissingApplets" = 'x' ]; then
  echo "All necessary applets are included in $TestBB"
  exit $ReturnCode
else
  echo 
  echo "WARNING: Missing applets: $MissingApplets"
  echo
  echo "FAILED: $TestBB is not suitable for use with bbinit."
  echo
  exit 1
fi

