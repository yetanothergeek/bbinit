#!/bin/false
# -*- mode: sh; -*-


# At first glance, it might seem that launching dbus-daemon and elogind
# should be two separate tasks, but it's not that simple. See the section
# on dbus and elogind in /usr/share/doc/bbinit/task.txt for more info.

# Start dbus daemon, mount cgroups and start elogind
task_start () {
local DBusDaemon
DBusDaemon=$(type -p dbus-daemon) || return 0
if type -p dbus-uuidgen &> /dev/null ; then
  local BBI_PERSIST_MACH_ID=1
  local DBusConf='/etc/bb.d/conf/dbus.conf'
  [ -f "$DBusConf" ] && . "$DBusConf"
  rm -f /run/dbus/pid /var/lib/dbus/machine-id
  case "$BBI_PERSIST_MACH_ID" in 
    0) dbus-uuidgen > /etc/machine-id ;;
    *) dbus-uuidgen --ensure=/etc/machine-id ;;
  esac
fi

local logind=''
local libexec
for libexec in 'lib' 'libexec' ; do
  logind="/usr/$libexec/elogind/elogind"
  if [ -f "$logind" ] && [ -x "$logind" ] ; then
    break
  else 
    logind=''
  fi
done
# Causes problems if daemon links to libsystemd and systemd isn't running.
# Causes problems if daemon links to libelogind and elogind isn't installed.
if grep -Eq 'libsystemd|libelogind' "$DBusDaemon" && [ -z "$logind" ]; then
  echo 'Not starting dbus daemon; [e]logind needed but not found.'
  return 0
fi
echo 'Starting dbus daemon...'
mkdir -p /run/dbus
dbus-daemon --system
[ "$logind" ] || return 0
touch /run/utmp
echo "Enabling cgroups support..."
/etc/bb.d/exec/cgroups
# In order for elogind's poweroff and reboot functions to work under bbinit,
# the /bin/reboot and /bin/poweroff files should point to busybox. If they
# already exist, but are owned by some other init system, we can bind-mount
# on top of them. If they don't exist, we can create our own symlinks, but
# if /bin/ is read-only, then there is nothing else we can do, and the
# elogind shutdown commands will fail.
local cmd
local bb='/lib/bb/busybox'
for cmd in /bin/reboot /bin/poweroff ; do
  local err="WARNING: Failed to set up $cmd (logind needs it)"
  if [ -e "$cmd" ] ; then
    diff -q "$bb" "$cmd" > /dev/null && continue
    if ! mount --bind "$bb" "$cmd" ; then
      logger -s -t bbinit daemon.warn "$err"
    fi
  else
    if ln -s "$bb" "$cmd" ; then
      logger -s -t bbinit daemon.notice "Created symlink: $cmd"
    else
      logger -s -t bbinit daemon.warn "$err"
    fi
  fi
done
echo "Starting login daemon..."
"$logind" &
}

